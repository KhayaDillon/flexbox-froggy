/*
The justify-content property aligns items horizontally and accepts the following values:

flex-start: Items align to the left side of the container.
flex-end: Items align to the right side of the container.
center: Items align at the center of the container.
space-between: Items display with equal spacing between them.
space-around: Items display with equal spacing around them.
*/

#pond {
  display: flex;
  justify-content: flex-end;
}

#pond {
  display: flex;
  justify-content: center;
}

#pond {
  display: flex;
  justify-content: space-around;
}

#pond {
  display: flex;
  justify-content: space-between;
}

/*
Now use align-items to help the frogs get to the bottom of the pond. This CSS property aligns items vertically and accepts the following values:

flex-start: Items align to the top of the container.
flex-end: Items align to the bottom of the container.
center: Items align at the vertical center of the container.
baseline: Items display at the baseline of the container.
stretch: Items are stretched to fit the container.
*/

#pond {
  display: flex;
  align-items: flex-end;
}

#pond {
  display: flex;
  justify-content: center;
  align-items: center;
}

#pond {
  display: flex;
  justify-content: space-around;
  align-items: flex-end;
}

/*
The frogs need to get in the same order as their lilypads using flex-direction. This CSS property defines the direction items are placed in the container, and accepts the following values:

row: Items are placed the same as the text direction.
row-reverse: Items are placed opposite to the text direction.
column: Items are placed top to bottom.
column-reverse: Items are placed bottom to top.
*/

#pond {
  display: flex;
  flex-direction: row-reverse;
}

#pond {
  display: flex;
  flex-direction: column;
}

#pond {
  display: flex;
  justify-content: flex-end;
  flex-direction: row-reverse;
}

#pond {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

#pond {
  display: flex;
  flex-direction: column-reverse;
  justify-content: space-between;
}

#pond {
  display: flex;
  flex-direction: row-reverse;
  justify-content: center;
  align-items: flex-end;
}

/*
Sometimes reversing the row or column order of a container is not enough. In these cases, we can apply the order property to individual 
items. By default, items have a value of 0, but we can use this property to set it to a positive or negative integer value.

Use the order property to reorder the frogs according to their lilypads.
*/

#pond {
  display: flex;
}
.yellow {
  order: 1;
}

#pond {
  display: flex;
}
.red {
  order: -1;
}

#pond {
  display: flex;
  align-items: flex-start;
}
.yellow {
	align-self: flex-end;
}

#pond {
  display: flex;
  align-items: flex-start;
}
.yellow {
	order: 1;
	align-self: flex-end;
}

/*
The flex-wrap property accepts the following values:

nowrap: Every item is fit to a single line.
wrap: Items wrap around to additional lines.
wrap-reverse: Items wrap around to additional lines in reverse.
*/

#pond {
	display: flex;
	flex-wrap: wrap;
}

#pond {
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
}

#pond {
	display: flex;
	flex-flow: column wrap;
}

/*
You can use align-content to set how multiple lines are spaced apart from each other. 
This property takes the following values:

flex-start: Lines are packed at the top of the container.
flex-end: Lines are packed at the bottom of the container.
center: Lines are packed at the vertical center of the container.
space-between: Lines display with equal spacing between them.
space-around: Lines display with equal spacing around them.
stretch: Lines are stretched to fit the container.

This can be confusing, but align-content determines the spacing between lines, 
while align-items determines how the items as a whole are aligned within the container. 
When there is only one line, align-content has no effect.
 */

#pond {
	display: flex;
	flex-wrap: wrap;
	align-content: flex-start;
}

#pond {
	display: flex;
	flex-wrap: wrap;
	align-content: flex-end;
}

#pond {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column-reverse;
  align-content: center;
}

/* Final Level */

#pond {
  display: flex;
  flex-direction: column-reverse;
  flex-wrap: wrap-reverse;
  align-content: space-between;
  justify-content: center;
}